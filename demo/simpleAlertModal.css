/*
	alertModal.css
	Implements a "window" which:
		- is centered horizontally in the viewport
		- grows as needed (vertically) to fit content
		- supports a "minimum margin" around the window
		- supports a border and border radius
		- scrolls within the window, 
			rather than moving the entire window in the viewport

	Most styles should not be overridden, except where indicated.
*/
html {
	height: 100%;

	/* minimum spacing around "window" */
	/* Feel free to use relative units, for larger gap on larger screens */
	padding: 15px;
	box-sizing: border-box;

	/* position the "window" */
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	/* Use this instead if you want to center the window vertically */
	/*justify-content: center;*/

	/* we need to explicitly set an overflow value (other than auto?) so that overflow on body is not treated as applied to this element */
	/* That's just a weird quirk of the CSS spec */
	overflow: hidden;

	/* we MUST set a background color other than transparent, or body background-color (which is probably solid) will be treated as if applied to this element */
	/* That's just a weird quirk of the CSS spec */
	/* This is the minimum possible opacity: */
	/*background-color: #00000001;*/
	/* but you probably want a visible backdrop: */
	background-color: #00000055;
}
body {
	margin: 0 !important;

	/*
		Feel free to override any of these
	*/
	border: 1px solid #aaa;
	border-radius: 5px;
	box-shadow: 0 0 10px 5px #888;
	background-color: white;

	/*
		You need to set an "initial" width.
		Can use absolute or relative units.
		This is more like a max width - the width will shrink as necessary on small screens.
	*/
	width: 700px;
	max-width: 100%; 
	height: auto;
	box-sizing: border-box;
	overflow: auto;

	/*
		You could add top/bottom padding, too, but we prefer to set top/bottom margin on child elements
	*/
	padding: 0 1rem;
}