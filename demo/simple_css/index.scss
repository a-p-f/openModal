// index.scss

// Note - css block comments starting with /*! will be left in the compiled spreadsheet
/*! index.css - compiled from index.scss - see comments there - do no edit this file directly */

// Note - you can import regular css files, too
// Important - normalize "breaks" native buttons, and it's impossible to undo that.
// If you must restore completely "native" buttons, you'll have to remove normalize.
// My recommendation is to leave it, though -> native buttons are way too small, anyway.
@import 'normalize';
// Note - above import will in-line the content of normalize.css
// The following statement would, instead, compile to a regular css import (since we've included '.css')
// @import 'normalize.css';

// Note - files beginning with underscore are called "partials" in sass
// They are designed only to be imported by other sass files
// You can run sass on an entire directory, and all sass/scss files
// (except for partials) will be compiled
// This is useful if you want to generate multiple output css files.
@import '_theme_variables';

/*
    Notice - _placeholders is included BEFORE _base and _component_classes.
    When you @extend, the current selector is copied to the rule in _placeholders in the compiled output.
    Since this comes before _base/_component_classes, 
    you can override the placeholder rules inside _base/_component_classes.

    Also note - the only reason to use @extend instead of @mixin is for size of the output css.
    Using @extend duplicates only the selector, instead of duplicating the rules (which 
    generally consist of many more characters). 
    Mixins are more powerful, and easier to reason about, and might be a better way to go.
*/
@import '_placeholders';

// Sensible defaults for most elements 
@import '_base';

// Various reusable "components". This is where most of your custom, per-site work should be done.
@import '_component_classes';

@import '_theme_classes';

// Sometimes you use stylesheets as a bit of a hack, when you can't change your markup
// (when it's generated by a library).
// Put those hacks here, to keep them separate from your other styles.
@import '_hacks';