/*
	alertModal.css
	Implements a "window" which:
		- is centered horizontally in the viewport
		- grows as needed to fit content
		- supports a "minimum margin" around the window
		- supports a border and border radius
		- scrolls within the window, 
			rather than moving the entire window in the viewport

	Requires to divs wrapping all content of the body

	Most styles should not be overridden, except where indicated.
*/
html {
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: flex-start;
	/* Use this instead if you want to center the window vertically */
	/*align-items: center;*/
}
body {
	/* 
		sets minimum gap between the "Alert Window" and the viewport boundary 
		feel free to override
		feel free to use relative units, for a larger gap on larger screens
	*/
	padding: 15px;

	margin: 0;
	box-sizing: border-box;
	max-width: 100%;
	max-height: 100%;
	display: flex;
	flex-direction: column;
}
/* This element implements the scrolling mechanism and border */
body > div {
	/*
		Feel free to override any of these
	*/
	border: 1px solid #aaa;
	border-radius: 5px;
	box-shadow: 0 0 10px 5px #888;
	background-color: white;

	/*
		Feel free to set explicit width/height - either absolute or relative
		These will be treated as "initial" width/height -
		the window will still be limited by viewport and body padding
	*/
	width: auto;
	height: auto;


	/* 
		padding-right will work if it does not have overflow,
		it will do NOTHING if it does have overflow
		padding-right does not work on this element if it  
	*/
	padding-right: 0 !important;
	margin: 0;
	padding: 0;
	max-width: 100%;
	overflow: auto;
	/* Allow child items to be wider than this element, so we actually scroll */
	display: flex;
	flex-direction: column;
	align-items: flex-start;
}
/* This element implements horizontal padding within the scroller */
body > div > div {
	/* 
		margin-right will work if the parent does not have overflow,
		it will do NOTHING if the parent does have overflow

		This is a flex-child, so top/bottom margin will not collapse with child margins, either. For that reason, you might as well just stick to padding on this element. 
	*/
	margin: 0 !important;

	/* 
		padding between content and scroller.
		Feel free to override.
		We recommend horizontal padding, and using top/bottom margins on your children for vertical spacing.
	*/
	padding: 0 1rem;

	/* 
		uncomment these if you'd rather hide horizontal overflow than scroll
	*/
	/*box-sizing: border-box;*/
	/*max-width: 100%;*/
}

/* 
	Add this class to <html> to get a window which is in between vertically-centered and fixed at the top
*/
.alertModalTopBiased {
	align-items: stretch;
}
.alertModalTopBiased>body:before {
	content: ' ';
	display: block;
	flex-grow: 1;
}
.alertModalTopBiased>body:after {
	content: ' ';
	display: block;
	/* 
		If this was set to 1, the window would always be centered vertically 
		If it was infinite, the window would be fixed to top of viewport, regardless of height
	*/
	flex-grow: 4;
}