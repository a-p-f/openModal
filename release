#!/bin/bash
[ $# -ne 1 ] && { echo "Usage: $0 version_arg"; exit 1; }

version_arg=$1

# Build resources
# We might not always bother running ./stage manually - it's really only needed when you are doing tests in browsers that don't support native modules
./stage || exit 1;

# Tell npm to bump version in package.json, commit change, get new version
# TODO - remove git-tag-version (re-enable)
version=$(npm version --git-tag-version=false $version_arg) || exit 1;

# prepend license comment to dist code
message="/*! 
	openModal $version
	(c) Alex Fischer
	https://github.com/a-p-f/openModal
*/
"

rm -r openModal
mkdir openModal
echo "$message" | cat - staging/openModal/openModal.js > openModal/openModal-${version}.js
echo "$message" | cat - staging/openModal/modalUtils.js > openModal/modalUtils-${version}.js
echo "$message" | cat - staging/openModal/modalUtils.css > openModal/modalUtils-${version}.css
echo "$message" | cat - staging/openModal/modalUtils.min.css > openModal/modalUtils-${version}.min.css

tar -czf openModal.tar.gz openModal

# npm publish
# git push
# git push origin $version
